#!/bin/sh

DOTPATH=~/.dotfiles
GITHUB_URL=https://github.com/kazukitash/dotfiles.git
TARBALL_URL=https://github.com/kazukitash/dotfiles/archive/master.tar.gz

has() {
  type "$1" >/dev/null 2>&1
  return $?
}

e_newline() {
  printf "\n"
}

e_header() {
  printf "\033[37;1m%s\033[m\n" "$*"
}

e_done() {
  printf "\033[37;1m%s\033[m...\033[32mOK\033[m\n" "✔ $*"
}

e_error() {
  printf "\033[31m%s\033[m\n" "✖ $*" 1>&2
}

dotfiles_download() {
  e_newline && e_header "Downloading dotfiles..."
  if has "git"; then
    git clone --recursive "$GITHUB_URL" "$DOTPATH"
  elif has "curl" || has "wget"; then
    if has "curl"; then
      curl -L "$TARBALL_URL"
    elif has "wget"; then
      wget -O - "$TARBALL_URL"
    fi | tar xvz
    if [ ! -d dotfiles-master ]; then
      e_error "dotfiles-master: not found"
      exit 1
    fi
    mv -f dotfiles-master "$DOTPATH"
  else
    e_error "curl or wget required"
    exit 1
  fi
  e_done "Download"
}

dotfiles_deploy() {
  e_newline && e_header "Deploying dotfiles..."
  cd "$DOTPATH"
  make deploy
  e_done "Deploy"
}

dotfiles_setup() {
  e_newline && e_header "Setting dotfiles..."
  cd "$DOTPATH"
  make setup
  e_done "Set up"
}

dotfiles_logo='
██████╗  ██████╗ ████████╗███████╗██╗██╗     ███████╗███████╗
██╔══██╗██╔═══██╗╚══██╔══╝██╔════╝██║██║     ██╔════╝██╔════╝
██║  ██║██║   ██║   ██║   █████╗  ██║██║     █████╗  ███████╗
██║  ██║██║   ██║   ██║   ██╔══╝  ██║██║     ██╔══╝  ╚════██║
██████╔╝╚██████╔╝   ██║   ██║     ██║███████╗███████╗███████║
╚═════╝  ╚═════╝    ╚═╝   ╚═╝     ╚═╝╚══════╝╚══════╝╚══════╝
'


# main
# 対話的に実行する場合はMakefileを用いる
# 対話的には実行しないための制御
if ! echo "$-" | grep -q "i"; then
  if [ "$0" = "${BASH_SOURCE:-}" ]; then
    # bash a.sh である場合は終了する
    exit 1
  else
    # cat a.sh | bash もしくは bash -c "$(cat a.sh)" の場合実行する
    if [ -n "${BASH_EXECUTION_STRING:-}" ] || [ -p /dev/stdin ]; then
      echo "$dotfiles_logo"
      dotfiles_download
      dotfiles_deploy
      dotfiles_setup
      e_newline && e_header "Now continue with rebooting your shell"
    fi
  fi
fi
